[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "1 Introduction\nAbout this project üëè\nOur mission as AGK Real Estate is to figure out housing prices in NYC within different neighborhoods, and boroughs. This is relevant because we need to find the cost of housing to be able to make it more affordable for those living in NYC. The prices of homes today are on the rise, because of the pandemic and inflation and it is our mission to make it so everyone in NYC can have affordable living.\nAs a real estate agency it is our job to provide homes that our clients will love at a low price.\n\n\n2 Data\n\nnyc_housing_sales &lt;- read_csv(\"https://bcdanl.github.io/data/nyc_housing_sales_2006-2023.csv\")\n\nprint(nyc_housing_sales)\n\n# A tibble: 200,913 √ó 22\n    year month   day borough     neighborhood building_class_categ‚Ä¶¬π block   lot\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;        &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1  2007     1     1 Staten Isl‚Ä¶ ARDEN HEIGH‚Ä¶ 01 ONE FAMILY DWELLIN‚Ä¶  5726    50\n 2  2007     1     1 Staten Isl‚Ä¶ TODT HILL    01 ONE FAMILY DWELLIN‚Ä¶   864     1\n 3  2007     1     2 Brooklyn    MARINE PARK  01 ONE FAMILY DWELLIN‚Ä¶  7708    61\n 4  2007     1     2 Brooklyn    MARINE PARK  01 ONE FAMILY DWELLIN‚Ä¶  8499    15\n 5  2007     1     2 Brooklyn    MIDWOOD      01 ONE FAMILY DWELLIN‚Ä¶  7589    70\n 6  2007     1     2 Queens      CAMBRIA HEI‚Ä¶ 01 ONE FAMILY DWELLIN‚Ä¶ 12766    80\n 7  2007     1     2 Queens      FAR ROCKAWAY 01 ONE FAMILY DWELLIN‚Ä¶ 15598   592\n 8  2007     1     2 Queens      FLUSHING-NO‚Ä¶ 01 ONE FAMILY DWELLIN‚Ä¶  5704    11\n 9  2007     1     2 Queens      FLUSHING-SO‚Ä¶ 01 ONE FAMILY DWELLIN‚Ä¶  6686     9\n10  2007     1     2 Queens      FLUSHING-SO‚Ä¶ 01 ONE FAMILY DWELLIN‚Ä¶  6975    28\n# ‚Ñπ 200,903 more rows\n# ‚Ñπ abbreviated name: ¬π‚Äãbuilding_class_category\n# ‚Ñπ 14 more variables: building_class_at_present &lt;chr&gt;, address &lt;chr&gt;,\n#   apartment_number &lt;lgl&gt;, zip_code &lt;dbl&gt;, residential_units &lt;dbl&gt;,\n#   commercial_units &lt;dbl&gt;, total_units &lt;dbl&gt;, land_square_feet &lt;dbl&gt;,\n#   gross_square_feet &lt;dbl&gt;, year_built &lt;dbl&gt;, tax_class_at_time_of_sale &lt;dbl&gt;,\n#   building_class_at_time_of_sale &lt;chr&gt;, sale_price &lt;dbl&gt;, sale_date &lt;date&gt;\n\n\n\n\n3 What is the average housing price for each borough in NYC? (ggplot)\n\naverage_prices &lt;- nyc_housing_sales |&gt;\n  group_by(borough) |&gt;\n  summarize(average_price =\n              mean(sale_price, na.rm = TRUE))\n\n\nggplot(data = average_prices) + \n  geom_col(mapping = \n               aes(x = borough, \n                   y = average_price),\n             alpha = .5) + \n  facet_grid(borough ~ .)\n\n\n\n\n\n\n\n\n\n\n4 What month was the most popular in Queens for housing sales?\n\nmost_popular_month &lt;- nyc_housing_sales %&gt;%\n  filter(borough == \"Queens\") %&gt;%\n  group_by(month) %&gt;%\n  summarize(total_sales = n()) %&gt;%\n  arrange(desc(total_sales)) %&gt;%\n  slice(1)\n\nmost_popular_month$month\n\n[1] 8\n\n\nAnswer: August (8th month)\n\nmost_popular_month &lt;- nyc_housing_sales %&gt;%\n  filter(borough == \"Queens\") %&gt;%\n  group_by(month) %&gt;%\n  summarize(total_sales = n()) %&gt;%\n  arrange(desc(total_sales))\n\nall_months &lt;- unique(nyc_housing_sales$month)\n\nall_months_sales &lt;- merge(most_popular_month, data.frame(month = all_months), by = \"month\", all = TRUE)\n\nggplot(all_months_sales, aes(x = month, y = ifelse(is.na(total_sales), 0, total_sales))) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(title = \"Monthly Housing Sales in Queens\",\n       x = \"Month\",\n       y = \"Total Sales\")\n\n\n\n\n\n\n\nggplot(all_months_sales, aes(x = month, y = ifelse(is.na(total_sales), 0, total_sales))) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(title = \"Monthly Housing Sales in Queens\",\n       x = \"Month\",\n       y = \"Total Sales\") +\n  scale_x_discrete(labels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"))\n\n\n\n\n\n\n\n\n\n\n5 What is the average housing price for each neighborhood in the Queens borough?\n\nborough_name &lt;- \"Queens\"\nborough_data &lt;- nyc_housing_sales %&gt;%\n  filter(borough == borough_name)\n\nneighborhood_avg_price &lt;- borough_data %&gt;%\n  group_by(neighborhood) %&gt;%\n  summarize(avg_price = mean(sale_price))\n\nprint(neighborhood_avg_price)\n\n# A tibble: 59 √ó 2\n   neighborhood       avg_price\n   &lt;chr&gt;                  &lt;dbl&gt;\n 1 AIRPORT LA GUARDIA   694702.\n 2 ARVERNE              319446.\n 3 ASTORIA             1075393.\n 4 BAYSIDE              787965.\n 5 BEECHHURST           956192.\n 6 BELLE HARBOR         847342.\n 7 BELLEROSE            541771.\n 8 BRIARWOOD            600287.\n 9 BROAD CHANNEL        330752.\n10 CAMBRIA HEIGHTS      405349.\n# ‚Ñπ 49 more rows\n\n\n\n\n6 Is there any correlation between square footage and housing prices in different NYC boroughs?\n\ncor_data &lt;- nyc_housing_sales |&gt;\n  filter(!is.na(gross_square_feet) & !is.na(sale_price)) |&gt;\n           group_by(borough) |&gt;\n                      summarize(corr = cor(gross_square_feet,\n                                           sale_price))\n\n\nggplot(cor_data, aes(x = borough, y = corr)) +\n  geom_col() +\n  labs(title = \"Correlation: Square Footage vs Housing Prices\",\n       x = \"Borough\",\n       y = \"Correlation Coefficient\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n7 How many housing units were built in 1925?\n\nunits_1925 &lt;- nyc_housing_sales |&gt;\n  filter(year_built == 1925) |&gt;\n           summarize(total_units_1925 =\n                       sum(total_units, na.rm = TRUE))\nprint(units_1925)\n\n# A tibble: 1 √ó 1\n  total_units_1925\n             &lt;dbl&gt;\n1            24273\n\n\n\n\n8 Which zipcode in NYC has the most housing?\n\nnyc_housing_sales %&gt;%\n  group_by(zip_code) %&gt;%\n  count() %&gt;%\n  arrange(desc(n))\n\n# A tibble: 172 √ó 2\n# Groups:   zip_code [172]\n   zip_code     n\n      &lt;dbl&gt; &lt;int&gt;\n 1    10312  9023\n 2    10314  8036\n 3    10306  7979\n 4    11234  5900\n 5    11434  5230\n 6    10305  4552\n 7    11412  4525\n 8    11413  4043\n 9    10304  3957\n10    10309  3871\n# ‚Ñπ 162 more rows\n\n\n\nnyc_housing_sales %&gt;%\n  group_by(zip_code) %&gt;%\n  count() %&gt;%\n  arrange(desc(n)) %&gt;%\n  ggplot(aes(x = n, y = reorder(zip_code, n))) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(title = \"Number of Housing Units by Zipcode in NYC\",\n       x = \"Number of Housing Units\",\n       y = \"Zipcode\")\n\n\n\n\n\n\n\n\n\n\n9 What is the most expensive neighborhood to live in NYC?\n\nmost_expensive_neighborhood &lt;- nyc_housing_sales %&gt;%\n  filter(sale_price == max(sale_price))\n\nmost_expensive_neighborhood_name &lt;- most_expensive_neighborhood$neighborhood[1]\n\nprint(paste(\"The most expensive neighborhood in NYC is:\", most_expensive_neighborhood_name))\n\n[1] \"The most expensive neighborhood in NYC is: REGO PARK\"\n\n\n\n\n10 What are the top 5 most expensive housing units in NYC?\n\ntop_5_expensive_units &lt;- nyc_housing_sales[order(-nyc_housing_sales$sale_price), ][1:5, ]\n\nprint(top_5_expensive_units)\n\n# A tibble: 5 √ó 22\n   year month   day borough   neighborhood    building_class_categ‚Ä¶¬π block   lot\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;           &lt;chr&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n1  2017     3    28 Queens    REGO PARK       21 OFFICE BUILDINGS     2079     1\n2  2017    11    21 Queens    FAR ROCKAWAY    08 RENTALS - ELEVATOR‚Ä¶ 15610     1\n3  2017    10    24 Queens    FLUSHING-NORTH  22 STORE BUILDINGS      4963    65\n4  2017     7    21 Queens    HOLLIS          30 WAREHOUSES          10352    79\n5  2019     6     4 Manhattan UPPER EAST SID‚Ä¶ 01 ONE FAMILY DWELLIN‚Ä¶  1381    61\n# ‚Ñπ abbreviated name: ¬π‚Äãbuilding_class_category\n# ‚Ñπ 14 more variables: building_class_at_present &lt;chr&gt;, address &lt;chr&gt;,\n#   apartment_number &lt;lgl&gt;, zip_code &lt;dbl&gt;, residential_units &lt;dbl&gt;,\n#   commercial_units &lt;dbl&gt;, total_units &lt;dbl&gt;, land_square_feet &lt;dbl&gt;,\n#   gross_square_feet &lt;dbl&gt;, year_built &lt;dbl&gt;, tax_class_at_time_of_sale &lt;dbl&gt;,\n#   building_class_at_time_of_sale &lt;chr&gt;, sale_price &lt;dbl&gt;, sale_date &lt;date&gt;\n\n\n\n\n11 Which borough has the most apartments?\n\nnyc_housing_sales %&gt;%\n  filter(building_class_category == \"09 COOPS - WALKUP APARTMENTS\") %&gt;%\n  group_by(borough) %&gt;%\n  count() %&gt;%\n  arrange(desc(n))\n\n# A tibble: 5 √ó 2\n# Groups:   borough [5]\n  borough           n\n  &lt;chr&gt;         &lt;int&gt;\n1 Manhattan        54\n2 Brooklyn         46\n3 Queens           40\n4 Bronx            17\n5 Staten Island     2\n\n\n\nnyc_housing_sales %&gt;%\n  filter(building_class_category == \"09 COOPS - WALKUP APARTMENTS\") %&gt;%\n  group_by(borough) %&gt;%\n  count() %&gt;%\n  arrange(desc(n)) %&gt;%\n  ggplot(aes(x = borough, y = n)) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(title = \"Number of Apartments by Borough\",\n       x = \"Borough\",\n       y = \"Number of Apartments\")\n\n\n\n\n\n\n\n\n\n\n12 Sources\nhttps://www.nyc.gov/site/finance/property/glossary-property-sales.page\nhttps://www.nyc.gov/assets/finance/jump/hlpbldgcode.html"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Avery Fonda",
    "section": "",
    "text": "Avery Fonda is a student at SUNY Geneseo living off-campus in Rochester, NY. When Avery isn‚Äôt at school or working part-time at a local ice cream shop, she enjoys spending time with her cockapoo, George."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Avery Fonda",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  B.S. in Accounting | January 2024 - May 2026   Finger Lakes Community College | Canandaigua, NY  A.S. in Business Administration | August 2022 - December 2023"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Avery Fonda",
    "section": "Experience",
    "text": "Experience\nCrew Leader | Bruster‚Äôs Real Ice Cream | Webster, NY March 2022 - Present"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code with no space in the folder name.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Insightful Analytics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nStarwars\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYour Name\n\n\n3 min\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  }
]